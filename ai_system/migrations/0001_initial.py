# Generated by Django 5.2 on 2025-09-30 19:08

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('condominium', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Acceso',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('fecha', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Fecha y Hora')),
                ('tipo', models.CharField(choices=[('entrada', 'Entrada'), ('salida', 'Salida')], max_length=20, verbose_name='Tipo de Acceso')),
                ('puerta', models.CharField(choices=[('principal', 'Puerta Principal'), ('vehicular', 'Puerta Vehicular'), ('peatonal', 'Puerta Peatonal'), ('estacionamiento', 'Estacionamiento')], max_length=30, verbose_name='Puerta')),
                ('metodo', models.CharField(choices=[('placa', 'Reconocimiento de Placa'), ('facial', 'Reconocimiento Facial'), ('tarjeta', 'Tarjeta de Acceso'), ('manual', 'Autorización Manual')], max_length=20, verbose_name='Método de Acceso')),
                ('aprobado', models.BooleanField(default=False, verbose_name='Acceso Aprobado')),
                ('placa_detectada', models.CharField(blank=True, max_length=20, null=True, verbose_name='Placa Detectada')),
                ('confianza_ai', models.FloatField(blank=True, help_text='Porcentaje de confianza de la detección AI', null=True, verbose_name='Confianza AI (%)')),
                ('observaciones', models.TextField(blank=True, null=True, verbose_name='Observaciones')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='accesos', to=settings.AUTH_USER_MODEL, verbose_name='Usuario')),
            ],
            options={
                'verbose_name': 'Acceso',
                'verbose_name_plural': 'Accesos',
                'ordering': ['-fecha'],
            },
        ),
        migrations.CreateModel(
            name='EventoAI',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('tipo', models.CharField(choices=[('placa_no_autorizada', 'Placa No Autorizada'), ('rostro_no_reconocido', 'Rostro No Reconocido'), ('violacion_regla', 'Violación de Regla'), ('mascota_zona_prohibida', 'Mascota en Zona Prohibida'), ('actividad_sospechosa', 'Actividad Sospechosa'), ('acceso_no_autorizado', 'Acceso No Autorizado'), ('area_restringida', 'Acceso a Área Restringida')], max_length=50, verbose_name='Tipo de Evento')),
                ('confianza', models.FloatField(help_text='Porcentaje de confianza de la detección AI', verbose_name='Confianza (%)')),
                ('descripcion', models.TextField(verbose_name='Descripción del Evento')),
                ('notificado', models.BooleanField(default=False, verbose_name='Notificación Enviada')),
                ('imagen_s3_url', models.URLField(blank=True, max_length=500, null=True, verbose_name='URL de Imagen en S3')),
                ('fuente_deteccion', models.CharField(default='frontend', help_text='frontend, camara, upload, etc.', max_length=50, verbose_name='Fuente')),
                ('datos_adicionales', models.JSONField(blank=True, default=dict, help_text='Información específica del evento', verbose_name='Datos Adicionales')),
                ('acciones_tomadas', models.TextField(blank=True, null=True, verbose_name='Acciones Tomadas')),
                ('acceso', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='eventos_ai', to='ai_system.acceso', verbose_name='Acceso Relacionado')),
                ('area_comun', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='eventos_ai', to='condominium.commonarea', verbose_name='Área Común')),
            ],
            options={
                'verbose_name': 'Evento AI',
                'verbose_name_plural': 'Eventos AI',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='acceso',
            index=models.Index(fields=['-fecha'], name='ai_system_a_fecha_547ed6_idx'),
        ),
        migrations.AddIndex(
            model_name='acceso',
            index=models.Index(fields=['aprobado'], name='ai_system_a_aprobad_a126d2_idx'),
        ),
        migrations.AddIndex(
            model_name='acceso',
            index=models.Index(fields=['metodo'], name='ai_system_a_metodo_c38eb9_idx'),
        ),
        migrations.AddIndex(
            model_name='acceso',
            index=models.Index(fields=['placa_detectada'], name='ai_system_a_placa_d_ccf647_idx'),
        ),
        migrations.AddIndex(
            model_name='eventoai',
            index=models.Index(fields=['-created_at'], name='ai_system_e_created_efc838_idx'),
        ),
        migrations.AddIndex(
            model_name='eventoai',
            index=models.Index(fields=['tipo'], name='ai_system_e_tipo_d055bc_idx'),
        ),
        migrations.AddIndex(
            model_name='eventoai',
            index=models.Index(fields=['notificado'], name='ai_system_e_notific_b712f0_idx'),
        ),
        migrations.AddIndex(
            model_name='eventoai',
            index=models.Index(fields=['confianza'], name='ai_system_e_confian_261bbf_idx'),
        ),
        migrations.AddIndex(
            model_name='eventoai',
            index=models.Index(fields=['fuente_deteccion'], name='ai_system_e_fuente__9ff588_idx'),
        ),
    ]
